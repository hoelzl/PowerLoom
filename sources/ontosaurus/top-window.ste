;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

;;;;;;;;;;;;;;;;;;;;;;;;;;;; BEGIN LICENSE BLOCK ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                                                            ;
; Version: MPL 1.1/GPL 2.0/LGPL 2.1                                          ;
;                                                                            ;
; The contents of this file are subject to the Mozilla Public License        ;
; Version 1.1 (the "License"); you may not use this file except in           ;
; compliance with the License. You may obtain a copy of the License at       ;
; http://www.mozilla.org/MPL/                                                ;
;                                                                            ;
; Software distributed under the License is distributed on an "AS IS" basis, ;
; WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License   ;
; for the specific language governing rights and limitations under the       ;
; License.                                                                   ;
;                                                                            ;
; The Original Code is the PowerLoom KR&R System.                            ;
;                                                                            ;
; The Initial Developer of the Original Code is                              ;
; UNIVERSITY OF SOUTHERN CALIFORNIA, INFORMATION SCIENCES INSTITUTE          ;
; 4676 Admiralty Way, Marina Del Rey, California 90292, U.S.A.               ;
;                                                                            ;
; Portions created by the Initial Developer are Copyright (C) 2000-2010      ;
; the Initial Developer. All Rights Reserved.                                ;
;                                                                            ;
; Contributor(s):                                                            ;
;                                                                            ;
; Alternatively, the contents of this file may be used under the terms of    ;
; either the GNU General Public License Version 2 or later (the "GPL"), or   ;
; the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),   ;
; in which case the provisions of the GPL or the LGPL are applicable instead ;
; of those above. If you wish to allow use of your version of this file only ;
; under the terms of either the GPL or the LGPL, and not to allow others to  ;
; use your version of this file under the terms of the MPL, indicate your    ;
; decision by deleting the provisions above and replace them with the notice ;
; and other provisions required by the GPL or the LGPL. If you do not delete ;
; the provisions above, a recipient may use your version of this file under  ;
; the terms of any one of the MPL, the GPL or the LGPL.                      ;
;                                                                            ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;; END LICENSE BLOCK ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;; Version: top-window.ste,v 1.8 2010/02/12 20:24:30 hans Exp

(in-package "STELLA")

(in-module "ONTOSAURUS")


;;;;
;;;; TOP LEVEL WINDOW
;;;;

;;; Temporarily disable these functions:

(defglobal *powerloom-reference-manual-url* STRING
	   "http://www.isi.edu/isd/LOOM/PowerLoom/documentation/manual/manual_frame.html")

(defun (saving-allowed? BOOLEAN) ()
  (return FALSE))

(defun (loading-allowed? BOOLEAN) ()
  (return FALSE))

(defun (editting-allowed? BOOLEAN) ()
  (return FALSE))

(defun (editting-possible? BOOLEAN) ()
  (return FALSE))

(defun (current-edit-lock? BOOLEAN) ()
  (return FALSE))

(defun (sorted-contexts (CONS OF STRING-WRAPPER)) ()
  (let ((contextNames (CONS OF STRING-WRAPPER) NIL))
    (foreach m in (all-modules)
	where (and (not (code-only? m))
		   (not (namespace? m)))
	do (setq contextNames (cons (name m) contextNames)))
    (return (sort contextNames
		  (the-code :function wrapped-string-less-than?))) ))

(defun serve-control-panel-internal  ((stream NATIVE-OUTPUT-STREAM))
  (with-html-tag ("HTML" stream TRUE)
    (with-html-tag ("HEAD" stream TRUE)
      (with-html-tag ("TITLE" stream TRUE)
	(print-stream stream  "PowerLoom Browser Control Panel"))
      #|
      (with-html-tag ("SCRIPT LANGUAGE='JavaScript' SRC='/ploom/control-panel.js'"
                      stream true)
	 nil )  ;; Force separate end tag.
	 |#
      (write-control-panel-script stream)
      )
    (with-html-tag ((concatenate "BODY BGCOLOR='#" *control-background-color* "'")
		    stream TRUE)
      (write-top-section stream)
      (write-theory-section stream)
      (write-bottom-section stream)))
  (return))

(defun write-theory-section ((stream NATIVE-OUTPUT-STREAM))
  (print-stream stream  "<b>" (lookup-term :context TRUE FALSE) ":</b>&nbsp;")
  (print-stream stream "<SELECT NAME=\"theory\" onChange='document.cookie=\"theory=\" + this[this.selectedIndex].value + \";\";'>" EOL)
  (foreach c in (sorted-contexts)
      do (print-stream stream "<option VALUE='" (wrapper-value c) "'>" 
		       (wrapper-value c) "</option>" EOL))
  (print-stream stream "</SELECT>" EOL)
  (return))

(defun write-top-section ((stream NATIVE-OUTPUT-STREAM))
  (print-stream stream "<FORM NAME=\"navform\" TARGET=\"content\" METHOD=\"POST\" onSubmit=\"return formTest(this)\">" EOL
		"<TABLE BORDER>" EOL
		"<TR>" EOL
		"<TD ALIGN=center COLSPAN=1 ROWSPAN=1>" EOL 
		"<A HREF=\"help/intro.html\" TARGET=\"content\" onMouseOver=\"window.status='Shows directions for using this browser'; return true\">" EOL
		"<IMG SRC=\"/ploom/icons/button-34-help.gif\" BORDER=0 WIDTH=12 HEIGHT=14></a></TD>" EOL
		"<TD COLSPAN=1 ROWSPAN=1 VALIGN=TOP>" EOL)
  (return))


(defun write-bottom-section ((stream NATIVE-OUTPUT-STREAM))
  ;; NEEDS TO FINISH CONVERSION
  (print-stream stream "<input TYPE=button  NAME=\"show\" VALUE=\"Show\" onClick=\"loadContextURL('content', 'show', this.form)\">
")
  (when (saving-allowed?)
    (print-stream stream "<input TYPE=button  NAME=\"save\" VALUE=\"Save...\" onClick=\"loadContextURL('content', 'save',this.form)\">
"))
  (when (loading-allowed?)
    (print-stream stream "<input TYPE=button  NAME= \"load\" VALUE=\"Load...\" 
       onClick=\"loadContextURL('content', 'load', this.form)\">
"))
  (when (editting-allowed?)
    (print-stream stream "<input TYPE=button  NAME=\"newctxt\" VALUE=\"New...\" onClick=\"loadNewContextURL('toc', 'COMMON-LISP-USER', this.form)\">
"))

  (print-stream stream EOL "</TD>")

  (print-stream stream "<TD ROWSPAN=1 ALIGN=CENTER>" EOL)
 #|
  (print-stream stream "<input TYPE=button  NAME=\"view\" VALUE=\"View...\" onClick=\"loadFrameVanillaURL('toc', 'view-files.html',this.form)\">" EOL)
  |#

  (print-stream stream "<INPUT TYPE=\"button\" NAME=\"swap\" VALUE=\"Hold Window\" 
  onClick=\"putLeft(parent.frames[2].document.location.href)\" onMouseOver=\"window.status='Moves the content window into the reference window.'; return true\">" EOL)
  
  #|
  (print-stream stream "<INPUT TYPE=\"button\" NAME=\"prefs\" VALUE=\"Options...\" 
  onClick=\"loadVanillaURL('preferences', 'edit-preferences',this.form)\" onMouseOver=\"window.status='Brings up a form for setting users preferences and display options.'; return true\">" EOL)
  |#

  (print-stream stream "</TD>" EOL)

  (if (editting-possible?)
      (progn 
	(print-stream stream "<TD ALIGN=LEFT ROWSPAN=2")
	(cond ((editting-allowed?)
	       (print-stream stream " BGCOLOR='#FFCCCC'")) ; :pink "#BC8F8F"
	      ((current-edit-lock?)
	       (print-stream stream " BGCOLOR='#FFFFCC'")) ; :goldenrod "#DBDB70"
	      )
	(print-stream stream ">" EOL
		      "<INPUT TYPE=\"radio\" NAME=\"LOCK\" VALUE=\"0\" onClick=\"location.pathname='/loom/edit-unlock.html'\"")
	(unless (editting-allowed?)
	  (print-stream stream " CHECKED"))
	(print-stream stream ">Browse&nbsp;only<BR>" EOL
	"<INPUT TYPE=\"radio\" NAME=\"LOCK\" VALUE=\"1\" onClick=\"location.pathname='/loom/edit-lock.html'\"")
	(when (editting-allowed?)
	  (print-stream stream " CHECKED"))
	(print-stream stream ">Make&nbsp;Changes<BR>&nbsp;&nbsp;(Others&nbsp;blocked)
</TD></TR>")
	)
    ;; NO EDITTING PRIVILEGES:

    (print-stream stream "<TD ALIGN=CENTER ROWSPAN=2 VALIGN=CENTER>" EOL
      "<A HREF=\"http://www.isi.edu/isd/LOOM/PowerLoom/\" TARGET=\"manual\" onMouseOver=\"window.status='Goes to the PowerLoom Home Page'; return true\">"
      "<img src=\"/ploom/icons/powerloom-logo-small.gif\" BORDER=0 WIDTH=40 HEIGHT=38></A>" EOL
      "</TD>" EOL "</TR>" EOL)
    )

  (print-stream stream
		"<TR><TD ALIGN=CENTER ROWSPAN=1>" EOL 
		"<A HREF='" *powerloom-reference-manual-url* "'"
		" TARGET=\"manual\""
		" onMouseOver=\"window.status='PowerLoom Reference Manual' ; return true\">" EOL
		"<IMG SRC=\"/ploom/icons/book-small.gif\" BORDER=0 WIDTH=21 HEIGHT=11></a></TD>" EOL 
		"<TD ALIGN=JUSTIFY ROWSPAN=1 COLSPAN=2>" EOL)

  (print-stream stream EOL EOL "<SELECT NAME=\"objecttype\">" EOL
		"<option VALUE=\"object\" SELECTED>any</option>" EOL
		"<option VALUE=\"concept\">" (lookup-term :concept FALSE FALSE) "</option>" EOL
		"<option VALUE=\"relation\">" (lookup-term :relation FALSE FALSE) "</option>" EOL
		"<option VALUE=\"instance\">" (lookup-term :instance FALSE FALSE) "</option>" EOL
		"</SELECT>" EOL)
 
  (print-stream stream EOL "<INPUT NAME=\"find\" SIZE=30 >" EOL EOL
		"<input TYPE=submit  NAME=\"dofind\" VALUE=\"Find\" onClick=\"loadURL('content', 'show', this.form)\">" EOL)

  (when (editting-allowed?)
    (print-stream stream "<input TYPE=button  NAME= \"edit\" VALUE=\"Edit\" 
       onClick=\"loadURL('content', 'edit', this.form)\">
<input TYPE=button  NAME=\"new\" VALUE=\"New...\" 
       onClick=\"loadURL('content', 'new',this.form)\">
"))

  (print-stream stream "  <img src=\"/ploom/icons/eighth-inch-space.gif\" ALT=\" \" WIDTH=9 HEIGHT=2>" EOL
		"Match&nbsp;<SELECT NAME=\"matchtype\">" EOL
		"<option VALUE=\"exact\">Exactly</option>" EOL
		"<option VALUE=\"caseInsensitive\">Case Insensitive</option>" EOL
		"<option VALUE=\"substring\" SELECTED>Substring</option>" EOL
		"</SELECT>" EOL)

  (print-stream stream "
</TD></TR></TABLE>
</FORM>")

  ;; Script to set the form to the previously stored cookie value.
  (print-stream stream "<SCRIPT LANGUAGE='JavaScript'>" EOL)
  (print-stream stream "var cookieValue = document.cookie.substring(document.cookie.indexOf('theory=')+7,document.cookie.length);" EOL)
  (print-stream stream "if (cookieValue.indexOf(';') != -1) {" EOL)
  (print-stream stream "cookieValue = cookieValue.substring(0,cookieValue.indexOf(';'));" EOL)
  (print-stream stream "}" EOL)
  (print-stream stream "for (var i = 0; i < document.navform.theory.length; i++) {" EOL)
  (print-stream stream "   if (document.navform.theory[i].value==cookieValue) {" EOL)
  (print-stream stream "     document.navform.theory.selectedIndex = i; }" EOL)
  (print-stream stream "}</SCRIPT>" EOL EOL)

  (return))

(defun serve-control-panel-needs-javascript ((stream NATIVE-OUTPUT-STREAM))
  ;; This function shouldn't be called, but if it is, make it warn.
  (with-html-tag ("HTML" stream true)
    (print-stream stream EOL)
    (with-html-tag ("HEAD" stream true)
    (print-stream stream EOL)
      (with-html-tag ("TITLE" stream true)
	(print-stream stream "Loom Browser No Javascript")))
    (with-html-tag ((concatenate "BODY BGCOLOR='#" *error-background-color* "'")
		    stream true)
      (with-html-tag ("B" stream true)
 	(with-html-tag ("FONT SIZE=6" stream true)
	  (print-stream stream
			"I'm sorry, but a Javascript enabled browser is needed to use this site." EOL))
	(with-html-tag ("P" stream true)
	  (with-html-tag ("FONT SIZE=4" stream)
	    (print-stream stream
			  "If your browser supports Javascript, then you may need to go into the options section and turn on Javascript.  Then reload this location.")))
	))) )


(defun control-panel-handler ((xchg HTTP/HTTP-EXCHANGE))
  ;; HTTP server handler for the control panel.
  (let ((stream (http/get-reply-stream xchg)))
    (case (http/get-request-method xchg)
      (:GET
       (serve-control-panel-internal stream))
      (otherwise
       (serve-control-panel-needs-javascript stream)))))


  ;;
;;;;;; Publish all Ontosaurus handlers
  ;;

(startup-time-progn
  (http/publish-handler
   "/ploom/ontosaurus/top-window.html"
   (the-code :function control-panel-handler)
   :content-type (http/get-http-mime-type :HTML NULL)
   :documentation "Ontosaurus control-panel handler."))
