<!-- Powerloom GUI ant build file -->

<project name="PowerLoom GUI" default="build" basedir=".">
  <property name="build.dir" value="../../native/java"/>
  <property name="buildclasses.dir" value="${build.dir}"/>
  <property name="guiclasses.dir" value="edu/isi/powerloom/gui"/>
  <property name="lib.dir" value="${build.dir}/lib"/>
  <property name="src.dir" value="src"/>
  <property name="docs.dir" value="doc"/>
  <property name="resources.dir" value="resources"/>
  <property name="metainf.dir" value="META-INF"/>
  <property name="lib-jars" value="${lib.dir}/castor-core.jar:${lib.dir}/castor.jar:${lib.dir}/commons-logging.jar"/>
  <property name="cpath" value="${buildclasses.dir}:${lib-jars}"/>
  <property name="new-jar-file" value="${lib.dir}/powerloom-gui.jar"/>
  <property name="key.alias" value="myself"/>
  <property name="keystore" value="myKeystore"/>
  <property name="storepass" value="plguistorepass"/>
  <property name="keypass" value="plguikeypass"/>
  <property name="deploy.file" value="/home/httpd/html/plgui/plgui.jar"/>
  <property name="debug.port" value="8005"/>

  <target name="prepare" 
     description="Creates the build directory" >
     <echo message="Creating the required directories...." />
     <mkdir dir="${buildclasses.dir}" />
  </target>

  <target name="compile" depends="prepare"
      description="Compiles the source code">
      <echo message="Compiling the source code...."/>
      <echo message="classpath = ${cpath}"/>
      <javac
         srcdir="${src.dir}"
         classpath="${cpath}"
         destdir="${buildclasses.dir}"
         includes="**/*.java"
         verbose="true"
	 debug="on"
      />
  </target>

  <target name="package"
      description="Creates a jar file using the newly compiled classes.">
      <echo message="Building the jar file...."/>
      <jar
         jarfile="${new-jar-file}"
         basedir="${buildclasses.dir}"
         includes="${guiclasses.dir}/**/*.*"
	 manifest="${metainf.dir}/MANIFEST.MF"
      />
      <echo message="Updating the jar file with images and other resources...."/>
      <jar
         jarfile="${new-jar-file}"
         basedir="."
         includes="resources/**/*.*"
         update="yes"
	 manifest="${metainf.dir}/MANIFEST.MF"
      />
  </target>

  <target name="sign"
     description="Sign the jar file">
     <echo message="Signing jar file..."/>
     <signjar jar="${new-jar-file}" alias="${key.alias}" keystore="${keystore}" storepass="${storepass}" 
              keypass="${keypass}"/>
  </target>

  <!-- this should also build, sign and copy the HTML, images and lib files to
       create a structure similar to /home/httpd/html/plgui/... -->
  <target name="deploy"
     description="Deploy the jar file to the web server so that it can be launched with JWS.">
     <echo message="Deploying jar to web server..."/>
     <copy file="${new-jar-file}" tofile="${deploy.file}"/>
  </target>

  <target name="run" 
     description="Runs the example client using a jar file">
     <echo message="Running the ${new-jar-file} program:" />
     <echo message="java -jar ${new-jar-file}" />
     <echo message=" " />
      <java 
            jar="${new-jar-file}" 
            fork="on">
      </java>
  </target>

  <target name="debug" 
     description="Runs the example client using a jar file in debug mode">
     <echo message="Debugging the ${new-jar-file} program on port ${debug.port}:" />
      <java 
            jar="${new-jar-file}" 
            fork="on">
         <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${debug.port},server=y,suspend=n"/>
         <jvmarg value="-Xdebug"/>
      </java>
  </target>

  <target name="build" depends="compile,package"
     description="Executes the targets needed to build and deploy this example.">
  </target>

  <target name="build-and-deploy" depends="compile,package,sign,deploy"
     description="Executes the targets needed to build and deploy this example.">
  </target>

  <target name="clean" 
     description="Removes gui class files from the build directory">
    <delete dir="${buildclasses.dir}/edu/isi/powerloom/gui" />
  </target>

  <target name="about" 
     description="Displays information about this build.xml file" >
     <echo message="This build.xml file build the powerloom client gui." />
  </target>

  <target name="javadoc"
     description="Generate Java Doc for the application.">
     <echo message="Generating javadoc..."/>
     <javadoc packagenames="edu.isi.powerloom.gui.*"
           classpath="${lib.dir}/castor.jar:${lib.dir}/jaxm-api.jar"	      
           overview="${src.dir}/overview.html"
           sourcepath="${src.dir}"
           defaultexcludes="yes"
           destdir="${docs.dir}/api"
           author="true"
           version="true"
           use="true"
           windowtitle="Powerloom GUI JavaDoc">
    <doctitle><![CDATA[<h1>Powerloom GUI</h1>]]></doctitle>
    <bottom><![CDATA[<i>Copyright &#169; 2002 University of Southern California Information Sciences Institute. All Rights Reserved.</i>]]></bottom>
    </javadoc>
  </target>
</project>
