// -*- Mode: Java -*-

/*---------------------------- BEGIN LICENSE BLOCK ---------------------------+
 |                                                                            |
 | Version: MPL 1.1/GPL 2.0/LGPL 2.1                                          |
 |                                                                            |
 | The contents of this file are subject to the Mozilla Public License        |
 | Version 1.1 (the "License"); you may not use this file except in           |
 | compliance with the License. You may obtain a copy of the License at       |
 | http://www.mozilla.org/MPL/                                                |
 |                                                                            |
 | Software distributed under the License is distributed on an "AS IS" basis, |
 | WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License   |
 | for the specific language governing rights and limitations under the       |
 | License.                                                                   |
 |                                                                            |
 | The Original Code is the PowerLoom KR&R System.                            |
 |                                                                            |
 | The Initial Developer of the Original Code is                              |
 | UNIVERSITY OF SOUTHERN CALIFORNIA, INFORMATION SCIENCES INSTITUTE          |
 | 4676 Admiralty Way, Marina Del Rey, California 90292, U.S.A.               |
 |                                                                            |
 | Portions created by the Initial Developer are Copyright (C) 2002-2010      |
 | the Initial Developer. All Rights Reserved.                                |
 |                                                                            |
 | Contributor(s):                                                            |
 |                                                                            |
 | Alternatively, the contents of this file may be used under the terms of    |
 | either the GNU General Public License Version 2 or later (the "GPL"), or   |
 | the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),   |
 | in which case the provisions of the GPL or the LGPL are applicable instead |
 | of those above. If you wish to allow use of your version of this file only |
 | under the terms of either the GPL or the LGPL, and not to allow others to  |
 | use your version of this file under the terms of the MPL, indicate your    |
 | decision by deleting the provisions above and replace them with the notice |
 | and other provisions required by the GPL or the LGPL. If you do not delete |
 | the provisions above, a recipient may use your version of this file under  |
 | the terms of any one of the MPL, the GPL or the LGPL.                      |
 |                                                                            |
 +----------------------------- END LICENSE BLOCK ---------------------------*/


// Version: AdvancedQueryOptionsPanel.java,v 1.8 2010/02/04 05:16:40 hans Exp

package edu.isi.powerloom.gui.components;

import java.awt.event.*;
import javax.swing.*;

/**
 * Sub-Panel of the Query Frame which contains the advanced options.
 *
 * @author <a href=mailto:eric@metrotech-consulting.com>Eric Melz</a>
 * @since October 21, 2002, 11:57 AM
 */
public class AdvancedQueryOptionsPanel extends javax.swing.JPanel {
    PLFrame parentFrame;
    QueryOptionsPanel parentPanel;

    public static String[] MATCH_OPTIONS = {"STRICT", "BASIC", "WHYNOT", "WHYNOT-DEEP", "EELD"};
    
    /** Creates new form AdvancedQueryOptionsPanel */
    public AdvancedQueryOptionsPanel(PLFrame frame, QueryOptionsPanel parentPanel) {
	this.parentFrame = frame;
	this.parentPanel = parentPanel;
        initComponents();
	initCustomComponents();
    }

    private void initCustomComponents() {
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
	JPanel showAdvancedPanel = parentPanel.getBottomPanel();
	parentPanel.remove(this);
	parentPanel.add(showAdvancedPanel, "South");
	parentFrame.pack();
    }//GEN-LAST:event_jButton1ActionPerformed
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        matchModeComboBox = new javax.swing.JComboBox(MATCH_OPTIONS);
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        minimumScoreTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        maximizeScoreCheckBox = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        maximumUnknownsTextField = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        dontOptimizeCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(3, 2));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel1.setText("Match Mode:");
        jPanel3.add(jLabel1);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel4.add(matchModeComboBox);

        jPanel1.add(jPanel4);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 0));

        jLabel3.setText("Minimum Score: ");
        jPanel6.add(jLabel3);

        minimumScoreTextField.setColumns(4);
        jPanel6.add(minimumScoreTextField);

        jPanel1.add(jPanel6);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 0));

        maximizeScoreCheckBox.setText("Maximize Score");
        jPanel9.add(maximizeScoreCheckBox);

        jPanel5.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel5);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 0));

        jLabel2.setText("Maximum Unknowns: ");
        jPanel7.add(jLabel2);

        maximumUnknownsTextField.setColumns(4);
        jPanel7.add(maximumUnknownsTextField);

        jPanel1.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 0));

        dontOptimizeCheckBox.setText("Don't Optimize");
        jPanel8.add(dontOptimizeCheckBox);

        jPanel1.add(jPanel8);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jButton1.setText("Hide Advanced Options");
        jPanel2.add(jButton1);

        add(jPanel2, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents
    
    public String getMaximumUnknowns() {
	return maximumUnknownsTextField.getText();
    }

    public void setMaximumUnknowns(String value) {
	maximumUnknownsTextField.setText(value);
    }

    public String getMinimumScore() {
	return minimumScoreTextField.getText();
    }
    
    public void setMinimumScore(String value) {
	minimumScoreTextField.setText(value);
    }

    public String getMatchMode() {
	return (String)matchModeComboBox.getSelectedItem();
    }

    public void setMatchMode(String value) {
	matchModeComboBox.setSelectedItem(value);
    }
    
    public boolean getMaximizeScore() {
        return maximizeScoreCheckBox.isSelected();
    }
    
    public void setMaximizeScore(boolean value) {
        maximizeScoreCheckBox.setSelected(value);
    }
    
    public boolean getDontOptimize() {
        return dontOptimizeCheckBox.isSelected();
    }
    
    public void setDontOptimize(boolean value) {
        dontOptimizeCheckBox.setSelected(value);
    }

    /**
     * Delegated by OptionsPanel
     */
    public void setupContinueButtonListeners(final JButton continueButton) {
	final Action disableContinueAction = new AbstractAction() {
		public void actionPerformed(ActionEvent e) {
		    continueButton.setEnabled(false);
		}
	    };
	new ComboBoxValueTracker(matchModeComboBox, disableContinueAction);
	new TextComponentValueTracker(minimumScoreTextField, disableContinueAction);
	new TextComponentValueTracker(maximumUnknownsTextField, disableContinueAction);
	maximizeScoreCheckBox.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
		    disableContinueAction.actionPerformed(e);
		}
	    });
	dontOptimizeCheckBox.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
		    disableContinueAction.actionPerformed(e);
		}
	    });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox maximizeScoreCheckBox;
    private javax.swing.JTextField maximumUnknownsTextField;
    private javax.swing.JCheckBox dontOptimizeCheckBox;
    private javax.swing.JTextField minimumScoreTextField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox matchModeComboBox;
    // End of variables declaration//GEN-END:variables
    
}
