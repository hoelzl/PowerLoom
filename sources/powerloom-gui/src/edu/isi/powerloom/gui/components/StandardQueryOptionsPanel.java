// -*- Mode: Java -*-

/*---------------------------- BEGIN LICENSE BLOCK ---------------------------+
 |                                                                            |
 | Version: MPL 1.1/GPL 2.0/LGPL 2.1                                          |
 |                                                                            |
 | The contents of this file are subject to the Mozilla Public License        |
 | Version 1.1 (the "License"); you may not use this file except in           |
 | compliance with the License. You may obtain a copy of the License at       |
 | http://www.mozilla.org/MPL/                                                |
 |                                                                            |
 | Software distributed under the License is distributed on an "AS IS" basis, |
 | WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License   |
 | for the specific language governing rights and limitations under the       |
 | License.                                                                   |
 |                                                                            |
 | The Original Code is the PowerLoom KR&R System.                            |
 |                                                                            |
 | The Initial Developer of the Original Code is                              |
 | UNIVERSITY OF SOUTHERN CALIFORNIA, INFORMATION SCIENCES INSTITUTE          |
 | 4676 Admiralty Way, Marina Del Rey, California 90292, U.S.A.               |
 |                                                                            |
 | Portions created by the Initial Developer are Copyright (C) 2002-2010      |
 | the Initial Developer. All Rights Reserved.                                |
 |                                                                            |
 | Contributor(s):                                                            |
 |                                                                            |
 | Alternatively, the contents of this file may be used under the terms of    |
 | either the GNU General Public License Version 2 or later (the "GPL"), or   |
 | the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),   |
 | in which case the provisions of the GPL or the LGPL are applicable instead |
 | of those above. If you wish to allow use of your version of this file only |
 | under the terms of either the GPL or the LGPL, and not to allow others to  |
 | use your version of this file under the terms of the MPL, indicate your    |
 | decision by deleting the provisions above and replace them with the notice |
 | and other provisions required by the GPL or the LGPL. If you do not delete |
 | the provisions above, a recipient may use your version of this file under  |
 | the terms of any one of the MPL, the GPL or the LGPL.                      |
 |                                                                            |
 +----------------------------- END LICENSE BLOCK ---------------------------*/


// Version: StandardQueryOptionsPanel.java,v 1.5 2010/02/04 05:19:41 hans Exp

package edu.isi.powerloom.gui.components;

import java.awt.event.*;
import javax.swing.text.*;
import javax.swing.*;

/**
 * Standard Options Panel for Query Frame.
 *
 * @since October 18, 2002, 6:57 PM
 * @author  melz
 * @see edu.isi.powerloom.gui.components.QueryFrame
 */
public class StandardQueryOptionsPanel extends javax.swing.JPanel {
    public static String[] INFERENCE_OPTIONS = {"NORMAL", "SHALLOW", "ASSERTION", "REFUTATION", "BACKTRACKING", "SUBSUMPTION"};
    
    /** Creates new form StandardQueryOptionsPanel */
    public StandardQueryOptionsPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        allResultsRadioButton = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        nResultsRadioButton = new javax.swing.JRadioButton();
        nResultsTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        timeoutTextField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        moveoutTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        inferenceLevelComboBox = new javax.swing.JComboBox(INFERENCE_OPTIONS);

        setLayout(new java.awt.GridLayout(3, 2));

        allResultsRadioButton.setSelected(true);
        allResultsRadioButton.setText("Retrieve all results");
        buttonGroup1.add(allResultsRadioButton);
        jPanel1.add(allResultsRadioButton);

        add(jPanel1);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 5));

        nResultsRadioButton.setText("Retrieve");
        buttonGroup1.add(nResultsRadioButton);
        nResultsRadioButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nResultsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nResultsRadioButtonActionPerformed(evt);
            }
        });

        jPanel2.add(nResultsRadioButton);

        nResultsTextField.setColumns(4);
        jPanel2.add(nResultsTextField);

        jLabel1.setText(" results");
        jPanel2.add(jLabel1);

        add(jPanel2);

        jLabel2.setText("Timeout:");
        jPanel3.add(jLabel2);

        timeoutTextField.setColumns(4);
        jPanel3.add(timeoutTextField);

        add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Moveout:");
        jLabel3.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(0, 8, 0, 0)));
        jPanel4.add(jLabel3);

        moveoutTextField.setColumns(4);
        jPanel4.add(moveoutTextField);

        add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Inference Level:");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel5.add(jLabel4);

        add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel6.add(inferenceLevelComboBox);

        add(jPanel6);

    }//GEN-END:initComponents

    private void nResultsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nResultsRadioButtonActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_nResultsRadioButtonActionPerformed
    
    
    public boolean isAllResultRadioButtonSelected() {
	return allResultsRadioButton.isSelected();
    }

    public void selectAllResultsRadioButton() {
	allResultsRadioButton.setSelected(true);
    }
    
    public void selectNResultsRadioButton() {
	nResultsRadioButton.setSelected(true);
    }

    public boolean isNResultsRadioButtonSelected() {
	return nResultsRadioButton.isSelected();
    }

    public String getNResults() {
	return nResultsTextField.getText();
    }

    public void setNResults(String value) {
	nResultsTextField.setText(value);
    }

    public String getTimeout() {
	return timeoutTextField.getText();
    }

    public void setTimeout(String value) {
	timeoutTextField.setText(value);
    }

    public String getMoveout() {
	return moveoutTextField.getText();
    }

    public void setMoveout(String value) {
	moveoutTextField.setText(value);
    }

    public String getInferenceLevel() {
	return (String)inferenceLevelComboBox.getSelectedItem();
    }

    public void setInferenceLevel(String value) {
	inferenceLevelComboBox.setSelectedItem(value);
    }

    /**
     * Delegated by OptionsPanel
     */
    public void setupContinueButtonListeners(final JButton continueButton) {
	allResultsRadioButton.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
		    continueButton.setEnabled(false);
		}
	    });
	final Action disableContinueAction = new AbstractAction() {
		public void actionPerformed(ActionEvent e) {
		    continueButton.setEnabled(false);
		}
	    };
	new ComboBoxValueTracker(inferenceLevelComboBox, disableContinueAction);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton allResultsRadioButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField moveoutTextField;
    private javax.swing.JTextField timeoutTextField;
    private javax.swing.JComboBox inferenceLevelComboBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nResultsTextField;
    private javax.swing.JRadioButton nResultsRadioButton;
    // End of variables declaration//GEN-END:variables
    
}
