;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

;;;;;;;;;;;;;;;;;;;;;;;;;;;; BEGIN LICENSE BLOCK ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                                                            ;
; Version: MPL 1.1/GPL 2.0/LGPL 2.1                                          ;
;                                                                            ;
; The contents of this file are subject to the Mozilla Public License        ;
; Version 1.1 (the "License"); you may not use this file except in           ;
; compliance with the License. You may obtain a copy of the License at       ;
; http://www.mozilla.org/MPL/                                                ;
;                                                                            ;
; Software distributed under the License is distributed on an "AS IS" basis, ;
; WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License   ;
; for the specific language governing rights and limitations under the       ;
; License.                                                                   ;
;                                                                            ;
; The Original Code is the STELLA Programming Language.                      ;
;                                                                            ;
; The Initial Developer of the Original Code is                              ;
; UNIVERSITY OF SOUTHERN CALIFORNIA, INFORMATION SCIENCES INSTITUTE          ;
; 4676 Admiralty Way, Marina Del Rey, California 90292, U.S.A.               ;
;                                                                            ;
; Portions created by the Initial Developer are Copyright (C) 2003-2010      ;
; the Initial Developer. All Rights Reserved.                                ;
;                                                                            ;
; Contributor(s):                                                            ;
;                                                                            ;
; Alternatively, the contents of this file may be used under the terms of    ;
; either the GNU General Public License Version 2 or later (the "GPL"), or   ;
; the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),   ;
; in which case the provisions of the GPL or the LGPL are applicable instead ;
; of those above. If you wish to allow use of your version of this file only ;
; under the terms of either the GPL or the LGPL, and not to allow others to  ;
; use your version of this file under the terms of the MPL, indicate your    ;
; decision by deleting the provisions above and replace them with the notice ;
; and other provisions required by the GPL or the LGPL. If you do not delete ;
; the provisions above, a recipient may use your version of this file under  ;
; the terms of any one of the MPL, the GPL or the LGPL.                      ;
;                                                                            ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;; END LICENSE BLOCK ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;; Version: soap-env.ste,v 1.6 2010/02/11 00:07:57 hans Exp

;;; XML Objects for soap envelopes.

(in-package "STELLA")

(in-module "SOAP-ENV")


(DEFNAMESPACE "http://schemas.xmlsoap.org/soap/envelope/")

(DEFCLASS Envelope (XMLObject)
  :PUBLIC-SLOTS
  ((encodingStyle :type STRING :initially "http://schemas.xmlsoap.org/soap/encoding/")
   (body :type Body)))

(DEFCLASS Body (XMLObject)
  :PUBLIC-SLOTS
  ((contents :type XMLObject)))

(DEFCLASS Fault (XMLObject)
  :PUBLIC-SLOTS
  ((faultcode :type faultcode)
   (faultstring :type faultstring)
   (faultactor :type faultactor)
   (detail :type detail)))

(DEFCLASS faultcode (XMLObject))
(DEFCLASS faultstring (XMLObject))
(DEFCLASS faultactor (XMLObject))
(DEFCLASS detail (XMLObject)
  :PUBLIC-SLOTS
  ((contents :type XMLObject)))

(DEFUN (GET-BODY Body) ((envelope Envelope))
  :PUBLIC? TRUE
  :GLOBALLY-INLINE? TRUE
  (RETURN (body envelope)))

(DEFUN (GET-BODY-CONTENTS XMLObject) ((envelope Envelope))
  :PUBLIC? TRUE
  :GLOBALLY-INLINE? TRUE
  (RETURN (contents (GET-BODY envelope))))

(DEFUN (FAULT-MESSAGE? BOOLEAN) ((envelope Envelope))
  :PUBLIC? TRUE
  :GLOBALLY-INLINE? TRUE
  (RETURN (ISA? (GET-BODY-CONTENTS envelope) @Fault))) 

(DEFUN (GET-FAULT Fault) ((envelope Envelope))
  :PUBLIC? TRUE
  :GLOBALLY-INLINE? TRUE
  (SAFETY 2 (FAULT-MESSAGE? envelope) "Envelope doesn't contain a Fault message")
  (RETURN (GET-BODY-CONTENTS envelope)))


;;; Testing:

#|
(DEFUN (SOAP-TEST STRING) ()
  (LET ((envelope (MAKE-TEST-ENVELOPE)))
    ;; Do a couple of parse/generate roundtrips:
       (RETURN (TO-XML-STRING (FROM-XML-STRING (TO-XML-STRING envelope))))))

(DEFUN (MAKE-TEST-ENVELOPE XMLObject) ()
  (LET ((item1 (NEW /STELLA/XML-OBJECTS/SAMPLE/SampleListItem
		    :|itemID| "Item1"))
	(item2 (NEW /STELLA/XML-OBJECTS/SAMPLE/SampleListItem
		    :|itemID| "Item2"))
	(itemList (NEW (LIST OF /STELLA/XML-OBJECTS/SAMPLE/SampleListItem)))
	(nested (NEW /STELLA/XML-OBJECTS/SAMPLE/SampleNested
		     :|nestedAttr| "nestedAttrVal"))
	(contents (NEW /STELLA/XML-OBJECTS/SAMPLE/SampleContents
		       :|sampleAttr| "someAttrVal"
		       :|sub| nested
		       :|SampleListItem| itemList)
;		       :|SampleListItemX| itemList)
		  )
	(body (NEW Body :|contents| contents))
	(envelope (NEW Envelope
		       :|encodingStyle| "http://schemas.xmlsoap.org/soap/encoding/"
		       :|body| body)))
    (INSERT itemList item1)
    (INSERT itemList item2)
    (RETURN envelope)))
|#
