;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                                                          ;
;  COPYRIGHT (C) UNIVERSITY OF SOUTHERN CALIFORNIA, 1997-2003              ;
;  University of Southern California, Information Sciences Institute       ;
;  4676 Admiralty Way                                                      ;
;  Marina Del Rey, California 90292                                        ;
;                                                                          ;
;  This software was developed under the terms and conditions of Contract  ;
;  No. N00014-94-C-0245 between the Defense Advanced Research Projects     ;
;  Agency and the University of Southern California, Information Sciences  ; 
;  Institute.  Use and distribution of this software is further subject    ;
;  to the provisions of that contract and any other agreements developed   ;
;  between the user of the software and the University of Southern         ;
;  California, Information Sciences Institute.  It is supplied "AS IS",    ;
;  without any warranties of any kind.  It is furnished only on the basis  ;
;  that any party who receives it indemnifies and holds harmless the       ;
;  parties who furnish and originate it against any claims, demands, or    ;
;  liabilities connected with using it, furnishing it to others or         ;
;  providing it to a third party.  THIS NOTICE MUST NOT BE REMOVED FROM    ;
;  THE SOFTWARE, AND IN THE EVENT THAT THE SOFTWARE IS DIVIDED, IT SHOULD  ;
;  BE ATTACHED TO EVERY PART.                                              ;
;                                                                          ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;; Version: powerloom.ste,v 1.43 2003/10/29 02:51:44 hans Exp

;;; PowerLoom top level

(in-package "STELLA")

(in-module "LOGIC")


  ;;
;;;;;; Version information
  ;;

;;; Before every new release these variables should be updated
;;; as the very last change, then committed, and then the source
;;; tree 'rtag'ged with a matching symbolic release tag.

(defglobal *powerloom-major-version-number* INTEGER 3)
(defglobal *powerloom-minor-version-number* INTEGER 0)
(defglobal *powerloom-release-state* STRING ".beta")
(defglobal *powerloom-patch-level* INTEGER 2)

(defglobal *powerloom-version-string* STRING
  (concatenate
    "PowerLoom "
    (integer-to-string *powerloom-major-version-number*)
    "."
    (integer-to-string *powerloom-minor-version-number*)
    "."
    (integer-to-string *powerloom-patch-level*)
    *powerloom-release-state*))


  ;;
;;;;;; Copyright
  ;;

(defun (powerloom-copyright-header STRING) ()
  ;; Changed this to not require the system to be available at runtime!
  ;; Look for `logic' system in two steps to avoid error message.
  (let ((logicSystemFile
         (make-system-definition-file-name "logic"))
        (logicSystem
         (choose (probe-file? logicSystemFile)
                 (get-system-definition "logic")
                 NULL))
	(substitution-list (new (KEY-VALUE-LIST OF STRING-WRAPPER STRING-WRAPPER))))
    (fill-in-date-substitution substitution-list)
    (if (defined? logicSystem)
	(return (substitute-template-variables-in-string
		 (banner logicSystem) substitution-list))
      (return "--------------------------------------------------------------------------+
 |                                                                          |
 |  COPYRIGHT (C) UNIVERSITY OF SOUTHERN CALIFORNIA, 1997-2003              |
 |  University of Southern California, Information Sciences Institute       |
 |  4676 Admiralty Way                                                      |
 |  Marina Del Rey, California 90292                                        |
 |                                                                          |
 |  This software was developed under the terms and conditions of Contract  |
 |  No. N00014-94-C-0245 between the Defense Advanced Research Projects     |
 |  Agency and the University of Southern California, Information Sciences  | 
 |  Institute.  Use and distribution of this software is further subject    |
 |  to the provisions of that contract and any other agreements developed   |
 |  between the user of the software and the University of Southern         |
 |  California, Information Sciences Institute.  It is supplied \"AS IS\",    |
 |  without any warranties of any kind.  It is furnished only on the basis  |
 |  that any party who receives it indemnifies and holds harmless the       |
 |  parties who furnish and originate it against any claims, demands, or    |
 |  liabilities connected with using it, furnishing it to others or         |
 |  providing it to a third party.  THIS NOTICE MUST NOT BE REMOVED FROM    |
 |  THE SOFTWARE, AND IN THE EVENT THAT THE SOFTWARE IS DIVIDED, IT SHOULD  |
 |  BE ATTACHED TO EVERY PART.                                              |
 |                                                                          |
 +--------------------------------------------------------------------------"
      )) ))

(defun copyright ()
  :command? TRUE :public? TRUE
  :documentation "Print detailed PowerLoom copyright information."
  (print " +" (powerloom-copyright-header) "+" EOL))

(defun (copyright-years STRING) ()  
  (let ((copyright (powerloom-copyright-header))
        (start (string-search copyright "1997" 0))
        (end (string-search copyright "  " start)))
    (return (subsequence copyright start end))))


  ;;
;;;;;; Top level
  ;;

(defglobal *powerloom-lock* PROCESS-LOCK-OBJECT (make-process-lock)
  :public? TRUE
  :documentation 
  "Lock object for synchronizing safe multi-process access to PowerLoom")

(defun powerloom ()
  :documentation "Run the PowerLoom listener.  Read logic commands from the
standard input, evaluate them, and print their results.  Exit if the user
entered `bye', `exit', `halt', `quit', or `stop'."
  :public? TRUE
  (print EOL "    Welcome to " *powerloom-version-string* EOL EOL
         "Copyright (C) USC Information Sciences Institute, "
         (copyright-years) "." EOL
         "PowerLoom is a trademark of the University of Southern California." EOL
         "PowerLoom comes with ABSOLUTELY NO WARRANTY!" EOL
         "Type `(copyright)' for detailed copyright information." EOL
         "Type `(help)' for a list of available commands." EOL
         "Type `(demo)' for a list of example applications." EOL
         "Type `bye', `exit', `halt', `quit', or `stop', to exit."
         EOL EOL)
  (exception-case
      (progn
	(logic-command-loop)
	(print "Bye." EOL EOL))
    (NATIVE-EXCEPTION (e)
      (print-stream STANDARD-ERROR
                    "Caught native non-STELLA exception " e " at top level." EOL)
      (print-exception-context e STANDARD-ERROR)
      (print-stream STANDARD-ERROR "Exiting PowerLoom." EOL EOL))) )

#|
;;; Now defined in `pli.ste':
(defmain ()
  :documentation "Main PowerLoom entry point for your code in C++ and Java."
  :public? TRUE :startup-system? FALSE
  (print "Initializing STELLA..." EOL)
  (startup-stella-system)
  (print "Initializing PowerLoom..." EOL)
  (startup-logic-system)
  (powerloom))
|#
