;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

;;;;;;;;;;;;;;;;;;;;;;;;;;;; BEGIN LICENSE BLOCK ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                                                            ;
; Version: MPL 1.1/GPL 2.0/LGPL 2.1                                          ;
;                                                                            ;
; The contents of this file are subject to the Mozilla Public License        ;
; Version 1.1 (the "License"); you may not use this file except in           ;
; compliance with the License. You may obtain a copy of the License at       ;
; http://www.mozilla.org/MPL/                                                ;
;                                                                            ;
; Software distributed under the License is distributed on an "AS IS" basis, ;
; WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License   ;
; for the specific language governing rights and limitations under the       ;
; License.                                                                   ;
;                                                                            ;
; The Original Code is the STELLA Programming Language.                      ;
;                                                                            ;
; The Initial Developer of the Original Code is                              ;
; UNIVERSITY OF SOUTHERN CALIFORNIA, INFORMATION SCIENCES INSTITUTE          ;
; 4676 Admiralty Way, Marina Del Rey, California 90292, U.S.A.               ;
;                                                                            ;
; Portions created by the Initial Developer are Copyright (C) 1996-2006      ;
; the Initial Developer. All Rights Reserved.                                ;
;                                                                            ;
; Contributor(s):                                                            ;
;                                                                            ;
; Alternatively, the contents of this file may be used under the terms of    ;
; either the GNU General Public License Version 2 or later (the "GPL"), or   ;
; the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),   ;
; in which case the provisions of the GPL or the LGPL are applicable instead ;
; of those above. If you wish to allow use of your version of this file only ;
; under the terms of either the GPL or the LGPL, and not to allow others to  ;
; use your version of this file under the terms of the MPL, indicate your    ;
; decision by deleting the provisions above and replace them with the notice ;
; and other provisions required by the GPL or the LGPL. If you do not delete ;
; the provisions above, a recipient may use your version of this file under  ;
; the terms of any one of the MPL, the GPL or the LGPL.                      ;
;                                                                            ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;; END LICENSE BLOCK ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;; Version: make-manual.ste,v 1.7 2006/05/11 07:06:42 hans Exp

;;; STELLA manual generation

;;; USAGE: simply CL:load this file into a Lisp version of STELLA.
;;;    (don't translate it first) and then call `(make-stella-manual)'.
;;;    Once that is done, run the Unix `make' in the `.../doc' directory.

(in-package "STELLA")

(in-module "STELLA")


(startup-time-progn
  (when (not (system-loaded? "utilities"))
    (make-system "utilities" :common-lisp)))

;;; Objects with docstrings that we don't want to include into
;;;    the catchall section:

(defglobal *stella-manual-excluded-objects* CONS
  (bquote (("PL:sources;stella;doc;excluded.texi"
            add-taxonomy-node
            add-taxonomy-root
            all-taxonomy-nodes
            clear-taxonomy-graph
            clear-taxonomy-node
            create-taxonomy-node
            downcase-character
            finalize-taxonomy-graph
            find-taxonomy-node
            initialize-parsing-tables
            initialize-taxonomy-graph
            initialize-taxonomy-node
            intern-bootstrap-symbol-at
            intern-permanent-symbol
            intern-rigid-symbol-locally
            intern-rigid-symbol-wrt-module
            link-taxonomy-nodes
            lookup-rigid-symbol
            phase-to-integer
            register-slot-name
            registered-slot-name?
            remove-taxonomy-node
            remove-taxonomy-root
            resize-slot-caches
            string-concatenate
            taxonomy-root?
            taxonomy-subnode-of?
            unlink-taxonomy-nodes
            unregister-slot-name
            upcase-character
            update-taxonomy-roots
            ABSTRACT-HASH-TABLE.initialize-hash-table
            DESTRUCTIVE-LIST-ITERATOR.insert
            FLOAT-HASH-TABLE.initialize-hash-table
            INTEGER-HASH-TABLE.initialize-hash-table
            MUTABLE-STRING.fifth-setter
            MUTABLE-STRING.first-setter
            MUTABLE-STRING.fourth-setter
            MUTABLE-STRING.nth-setter
            MUTABLE-STRING.second-setter
            MUTABLE-STRING.third-setter
            NATIVE-VECTOR.nth-setter
            STRING-HASH-TABLE.initialize-hash-table
            STRING-TO-INTEGER-HASH-TABLE.initialize-hash-table
            UNKNOWN.defined?
            UNKNOWN.null?
            )
           )))

(defun make-stella-manual ()
  ;; Hack, by generating a manual for the excluded objects, we register
  ;;    all those functions as documented and hence exclude them in
  ;;    the template generation phase.
  (UTILITIES/generate-manual *stella-manual-excluded-objects*)
  (UTILITIES/generate-manual-from-template
   ;; hack: logical pathnames eat the second extension as a version number:
   (concatenate
     (translate-logical-pathname "PL:sources;stella;doc;manual.texi") ".in")
   "PL:sources;stella;doc;manual.texi"))
